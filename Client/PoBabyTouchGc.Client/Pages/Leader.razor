@page "/leader"
@using System.Net.Http.Json
@using PoBabyTouchGc.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>PoBabyTouchGc</PageTitle>

<div class="leaderboard-container">
    <h1>Leaderboard</h1>
    
    <div class="leaderboard-content">
        @if (isLoading)
        {
            <div class="loading-spinner">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p>Loading leaderboard data...</p>
            </div>
        }
        else if (errorMessage != null)
        {
            <div class="alert alert-danger">
                <p>Error loading leaderboard: @errorMessage</p>
                <button class="btn btn-primary" @onclick="LoadLeaderboardData">Try Again</button>
            </div>
        }
        else if (leaderboardEntries != null && leaderboardEntries.Count > 0)
        {
            <table class="leaderboard-table">
                <thead>
                    <tr>
                        <th>Rank</th>
                        <th>Initials</th>
                        <th>Score</th>
                        <th>Date</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < leaderboardEntries.Count && i < 10; i++)
                    {
                        var entry = leaderboardEntries[i];
                        <tr>
                            <td class="rank-cell">#@(i + 1)</td>
                            <td class="initials-cell">@entry.PlayerInitials</td>
                            <td class="score-cell">@entry.Score</td>
                            <td class="date-cell">@entry.Timestamp?.DateTime.ToLocalTime().ToString("MM/dd/yyyy")</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="empty-leaderboard">
                <p>No scores have been recorded yet. Be the first!</p>
            </div>
        }
    </div>
    
    <div class="navigation-buttons">
        <button class="btn btn-primary" @onclick="GoToGame">Play Game</button>
        <button class="btn btn-secondary" @onclick="GoToHome">Back to Menu</button>
    </div>
</div>


@code {
    private List<HighScore>? leaderboardEntries;
    private bool isLoading = true;
    private string? errorMessage;
    
    protected override async Task OnInitializedAsync()
    {
        await LoadLeaderboardData();
    }
    
    private async Task LoadLeaderboardData()
    {
        try
        {
            isLoading = true;
            errorMessage = null;
            
            // Fetch top 10 leaderboard data from API
            var response = await Http.GetFromJsonAsync<ApiResponse<List<HighScore>>>("api/highscores?count=10");
            
            if (response?.Success == true && response.Data != null)
            {
                leaderboardEntries = response.Data;
            }
            else
            {
                errorMessage = response?.Message ?? "Failed to load leaderboard data";
                leaderboardEntries = new List<HighScore>();
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to load leaderboard data: {ex.Message}";
            leaderboardEntries = null;
        }
        finally
        {
            isLoading = false;
        }
    }
    
    private void GoToGame()
    {
        NavigationManager.NavigateTo("/game");
    }
    
    private void GoToHome()
    {
        NavigationManager.NavigateTo("/");
    }
}
