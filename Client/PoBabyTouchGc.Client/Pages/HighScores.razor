@page "/highscores"
@using PoBabyTouchGc.Client.Components

<div class="page-title">High Scores - PoBabyTouchGc</div>

<div class="high-scores-page">
    <div class="page-header">
        <h1>üèÜ High Scores Leaderboard</h1>
        <p>See who's achieved the highest scores in PoBabyTouchGc!</p>
    </div>

    <div class="game-mode-selector">
        <label for="gameMode">Game Mode:</label>
        <select id="gameMode" @onchange="OnGameModeChanged" value="@SelectedGameMode">
            <option value="Default">Default</option>
            <option value="Easy">Easy</option>
            <option value="Hard">Hard</option>
            <option value="Expert">Expert</option>
        </select>
    </div>

    <HighScoreDisplay GameMode="@SelectedGameMode" 
                     MaxScores="20" 
                     ShowRefreshButton="true" 
                     AutoRefresh="true" 
                     AutoRefreshInterval="60000" />

    <div class="back-to-game">
        <a href="/" class="back-button">‚Üê Back to Game</a>
    </div>
</div>

<style>
    .high-scores-page {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem;
        min-height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .page-header {
        text-align: center;
        margin-bottom: 2rem;
        color: white;
    }

    .page-header h1 {
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    }

    .page-header p {
        font-size: 1.2rem;
        opacity: 0.9;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
    }

    .game-mode-selector {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
        padding: 1rem;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        backdrop-filter: blur(10px);
    }

    .game-mode-selector label {
        color: white;
        font-weight: bold;
        font-size: 1.1rem;
    }

    .game-mode-selector select {
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 6px;
        background: white;
        color: #333;
        font-size: 1rem;
        cursor: pointer;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .game-mode-selector select:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.3);
    }

    .back-to-game {
        text-align: center;
        margin-top: 2rem;
    }

    .back-button {
        display: inline-block;
        padding: 0.75rem 1.5rem;
        background: rgba(255, 255, 255, 0.2);
        color: white;
        text-decoration: none;
        border-radius: 8px;
        font-size: 1.1rem;
        font-weight: bold;
        transition: all 0.3s;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .back-button:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
</style>

@code {
    private string SelectedGameMode { get; set; } = "Default";

    private void OnGameModeChanged(ChangeEventArgs e)
    {
        SelectedGameMode = e.Value?.ToString() ?? "Default";
        StateHasChanged();
    }
}
