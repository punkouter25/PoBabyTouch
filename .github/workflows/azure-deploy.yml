name: Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        az --version
        
    - name: Restore dependencies
      run: dotnet restore PoBabyTouchGc.sln
      
    - name: Build
      run: dotnet build PoBabyTouchGc.sln --configuration Release --no-restore
      
    - name: Test
      run: dotnet test PoBabyTouchGc.sln --configuration Release --no-build
      
    - name: Publish
      run: dotnet publish Server/PoBabyTouchGc.Server/PoBabyTouchGc.Server.csproj -c Release -o ${{github.workspace}}/publish
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Web App using CLI
      run: |
        echo "Starting deployment to Azure Web App using Azure CLI..."
        # Create a zip file of the published output
        cd ${{github.workspace}}/publish
        zip -r site.zip ./*
        
        # Deploy the zip file to Azure Web App
        az webapp deployment source config-zip \
          --resource-group PoBabyTouch \
          --name PoBabyTouchApp \
          --src site.zip
          
        echo "Deployment completed successfully!"
        
    - name: Verify deployment
      run: |
        echo "Verifying deployment status..."
        SITE_URL="https://pobabytouchapp.azurewebsites.net"
        
        # Add retry logic with exponential backoff
        max_retries=5
        retry_count=0
        wait_time=10
        
        while [ $retry_count -lt $max_retries ]; do
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $SITE_URL)
          
          if [ $HTTP_STATUS -eq 200 ] || [ $HTTP_STATUS -eq 302 ]; then
            echo "✅ Deployment verification successful: Site is responding with HTTP status $HTTP_STATUS"
            break
          else
            retry_count=$((retry_count+1))
            if [ $retry_count -lt $max_retries ]; then
              echo "⚠️ Site is responding with HTTP status $HTTP_STATUS. Retrying in $wait_time seconds... (Attempt $retry_count/$max_retries)"
              sleep $wait_time
              wait_time=$((wait_time*2)) # Exponential backoff
            else
              echo "❌ Deployment verification failed after $max_retries attempts: Site is responding with HTTP status $HTTP_STATUS"
              echo "You can manually check the site at $SITE_URL"
            fi
          fi
        done